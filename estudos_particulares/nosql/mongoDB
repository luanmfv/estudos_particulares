NoSQL (Not Only SQL) é um tipo de banco de dados que não usa exclusivamente o modelo relacional tradicional (tabelas) e é projetado para trabalhar com grandes volumes de dados não estruturados ou semiestruturados.

Características principais:
Não usa SQL como linguagem principal (ou usa parcialmente).

Não tem esquema fixo (schema-less).

Alta escalabilidade (ideal para sistemas distribuídos).

Suporta diferentes tipos de dados: documentos, chave-valor, grafos, colunas.

Tipos comuns de NoSQL:
Documentos (ex: MongoDB) → usa JSON ou BSON.

Chave-valor (ex: Redis) → simples par chave e valor.

Colunar (ex: Cassandra) → colunas ao invés de linhas.

Grafos (ex: Neo4j) → ideal para redes e conexões.

Quando usar NoSQL?
Dados não estruturados ou com estrutura variável.

Escalabilidade horizontal (muitos servidores).

Aplicações em tempo real, Big Data, redes sociais, etc.

----------------------------------------------------------------------------------

no mongo shell voce usou o comando

db.createCollection("collection")

para criar um database por lá

para limpar a tela do cmd é cls

------------------------------------------------------------------------

se o mongosh não for direto no cmd adicione ele ao path em variaveis do ambiente do sistema

-------------------------------------------------------------------------

comando

show collections   para ver as coleções dentro do seu database selecionado



para deletar uma collection

db.testeteste.drop()

db.dropDatabase()   para excluir o banco de dados que esta em use

--------------------------------------------------------------------------------



o mongodb coloca o id automaticamente



/** 
* Paste one or more documents here                                    o comando /**   e */ para abrir e fechar comentários
*/
{
  "_id": {
    "$oid": "68950b422facd248ab12d6cc"
  }
}



-------------------------------------------------------------------------------

{
  "_id": {
    "$oid": "68950e962facd248ab12d6cd"
  },
  "name": "Loroan",
  "email": "loroanlol@gmail.com",
  "password": "@Aguamineral50",
  "avatar": "Warrior",
  "game": "Sword Art Online",
  "highscore": 0,
  "money": 0.01,
  "hp": 0,
  "xp": 0,
  "level": 0
}

-------------------------------------------------------------------------------


no mongoshell  

db.users.insertOne({"marquinhos":10})


Caso você queira adicionar mais de uma lista de uma vez, usa-se

db.users.insertMany([{dados1},{dados2}])

-----------------------------------------------------

filtragem e busca

em project você pode filtar apenas por uma coluna fazendo assim

{name:1,email:1}
por padrão ele tras o id também

mostra apenas name e email

ou no primeiro campo para você pode digitar

{name:"Louroan"}

ele pegara toda a lista que contém isso

se usar
{name:0,email:0}

ele tras tudo menos essas duas colunas

em sort,

ordenar em ordem descrescente {name:-1 }  e crescente {name:1 }



em collation,

{locale:"pt",strength:2}

ignora caracteres especiais e letras maiusculas

atlas configura pelo site  uma ia para busca


----------------------------------------------------------

no shell

db.users.find({name:"Louroan"});

para pesquisa ele mostra a coluna inteira


db.users.find({name:"louroan"}).collation({locale:"pt",strength:2});

consulta com caracteres especiais


{$and:[{level:{$gte:0}},{game:"Sword Art Online"}]}

$gte

seleciona do nivel x e adiante


$and

para duas funções na mesmo busca


site manual do mongodb

https://www.mongodb.com/pt-br/docs/manual/reference/operator/query/

----------------------------------------------------------------------------










